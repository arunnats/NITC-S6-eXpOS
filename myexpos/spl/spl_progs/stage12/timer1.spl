//SAVE SP
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
breakpoint;

//SET SP TO KERNEL STACK
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;

backup;

alias currentpid R0;
currentpid=[SYSTEM_STATUS_TABLE+1];

alias processtableentry R1;
processtableentry=PROCESS_TABLE+currentpid*16;

[processtableentry + 12] = SP % 512;
[processtableentry + 14] = PTBR;
[processtableentry + 15] = PTLR;

[processtableentry + 4] = READY;

alias newpid R2;
if(currentpid == 0) then
	newpid= 1;
else
	newpid= 0;
endif;

alias newprocesstable R3;
newprocesstable = PROCESS_TABLE + newpid * 16;

//Set back Kernel SP, PTBR , PTLR
SP =  [newprocesstable + 11] * 512 + [newprocesstable + 12] ;
PTBR = [newprocesstable + 14];
PTLR = [newprocesstable + 15];

[SYSTEM_STATUS_TABLE + 1] = newpid;

if([newprocesstable + 4] == CREATED) then
	[newprocesstable + 4] = RUNNING;
	SP = [newprocesstable + 13];
    breakpoint;
	ireturn;
endif;

[newprocesstable+4]=RUNNING;

restore;

//SET SP TO USER SP
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];
breakpoint;

ireturn;